@charset"utf-8";  //设定字符集
body{
	background-color: blue;
}
//我是不会被编译的
/*我是不会被编译的*/

@text_width:300px;

.box{
	width: @text_width;
	height: 100px;
	background: green;
	.border;
}
//混合
.border{
	border:solid  1px pink;
}

//混合，可带参数
.border_02(@border_width){
	border:solid yellow @border_width;
}

.test_mix2{
	.border_02(30px); //参数不初始化，括号里必须要有个值，
}
//混合默认带值
.border_03(@border_width:10px){
	border:solid yellow @border_width;
}

.test_mix3{
	.border_03();
}

//混合例子

.border_radius(@radius:5px){
	-webkit-border-radius:@radius;
	-moz-border-radius:@radius;
	border-radius:@radius;
}
.radius_test{
	width: 100px;
	height: 100px;
	background: pink;
	.border_radius(30px);
}

//匹配模式(原始)

// .tri_test{
	// width: 0;
	// height: 0
	// overflow: hidden;

// 	border-width: 150px;
// 	border-color: red transparent transparent transparent;
// 	border-style: solid dashed dashed dashed ;//dashed 虚线
// }

//匹配模式
.triangle(top, @w: 5px, @c:#ccc){
	border-width: @w;
	border-color: transparent transparent #ccc transparent;
	border-style: dashed dashed solid dashed ;//dashed 虚线
}
.triangle(bottom, @w: 5px, @c:#ccc){
	border-width: @w;
	border-color: @c transparent transparent transparent;
	border-style: solid dashed dashed  dashed ;//dashed 虚线
}
.triangle(left, @w: 5px, @c:#ccc){
	border-width: @w;
	border-color: transparent @c transparent transparent;
	border-style: dashed solid dashed dashed ;//dashed 虚线
}
.triangle(right, @w: 5px, @c:#ccc){
	border-width: @w;
	border-color: transparent transparent transparent @c ;
	border-style: dashed dashed dashed solid  ;//dashed 虚线
}
.triangle(@_, @w: 5px, @c:#ccc){      //@_   强大：无论匹配到什么值，均会带上的
	width: 0;
	height: 0;
	overflow: hidden;
}
.tri_test{
	
	.triangle(top, 100px);
}

//匹配：定位
.pos(r){
	position:relative;
}
.pos(a){
	position:absolute;
}
.pos(f){
	position:fixed;
}

.match{
	width: 100px;
	height: 150px;
	background-color: green;
	.pos(r);
}

//运算
@var:300px;
.box_1{
	width:(@var*2+20);//可以不加px
	color: #ccc+20;//工作中不常用
}

//嵌套
/*
.list{}
.list li{}
.list a{}
.list span{}

*/
.list{
	width: 600px;
	margin:30px auto;
	padding: 0;
	list-style: none;
	li{
		height: 30px;
		line-height: 30px;
		background-color: pink;
		margin-bottom: 5px;
	}
	a{
		float: left;
		//& 代表上一层选择器
		&:hover{
			color: red;

		}
	}
	span{
		float: right;
		
	}
}

.content{
	width: 40px;
	height: 40px;
	background: #ccc;
	&_item1{
		width: 20px;
		height: 20px;
		background: pink;
	}
}




//@arguments      @arguments包含了所有传递进来的参数。
// .border_org(@w:20px,@c:green;@s:solid){
// 	border:@w @c @s;
// }   
//相当于
.border_org(@w:20px,@c:green,@s:solid){
	border:@arguments;
}
.test_arguments{
	.border_org(40px);
}

//避免编译 波浪线 ~原封不动地输出
.test_3{
	width: ~"calc(300px-20px)";
}

//！important  优先级最高
.test_important{
	.border_radius() !important;
}